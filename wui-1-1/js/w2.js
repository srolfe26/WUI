Wui.W2 = function(args){
    $.extend(this,{
        css:         'body { color:#333; font:90%  Arial, Verdana, Helvetica, sans-serif; overflow:auto; margin:0; padding:0;}' +
                     'a {color:#09c; text-decoration:none;} a:hover {color:#0c9; text-decoration:underline;}',
        /** Whether or not to show the button that will give the user a view of the HTML generated by the WYSIWYG */
        showHTML:    false
    },args,{

    });
    this.init();
};
Wui.W2.prototype = $.extend(new Wui.FormField(),{
    init:       function(){
                    var me = this;
                    Wui.FormField.prototype.init.call(me);

                    me.el.addClass('wui-wysiwyg');
                    me.append(
                        me.iframe = $('<iframe>').addClass('wui-editor'),
                        me.tools = $('<div>').addClass('wui-editor-tools')
                    );

                    (me.elAlias || me.el).resizable();

                    me.tools.append(
                        me.bold = $('<a>').addClass('bold').attr({tabIndex:-1, title:'Bold'}),
                        me.italic = $('<a>').addClass('italic').attr({tabIndex:-1, title:'Italic'}),
                        me.underline = $('<a>').addClass('underline').attr({tabIndex:-1, title:'Underline'}),
                        me.strike = $('<a>').addClass('strikethrough').attr({tabIndex:-1, title:'Strike-through'}),
                        me.link = $('<a>').addClass('link').attr({tabIndex:-1, title:'Link'}),
                        me.unlink = $('<a>').addClass('unlink').attr({tabIndex:-1, title:'Un-Link'}),
                        me.ul = $('<a>').addClass('unorderedlist').attr({tabIndex:-1, title:'Unorderd List'}),
                        me.ol = $('<a>').addClass('orderedlist').attr({tabIndex:-1, title:'Ordered List'}),
                        me.left = $('<a>').addClass('justifyleft').attr({tabIndex:-1, title:'Left Align'}),
                        me.center = $('<a>').addClass('justifycenter').attr({tabIndex:-1, title:'Center Align'}),
                        me.right = $('<a>').addClass('justifyright').attr({tabIndex:-1, title:'Right Align'})
                    );

                    if(me.showHTML)
                        me.tools.append( $('<a>').addClass('html').attr({tabIndex:-1, title:'Toggle HTML View'}) );
                },
    disable:    function(){},
    onRender:   function(){
                    var me = this, 
                        edit = me.editor = me.iframe[0].contentWindow.document;
                    
                    // Make the iframe editable and set up its style
                    edit.designMode = 'on';
                    edit.open();
                    edit.close();
                    if(me.css.length) $('head',edit).append($('<style>').attr({type:'text/css'}).text(me.css));

                    // Perform standard for field stuff
                    Wui.FormField.prototype.onRender.call(me);

                    // Add menu buttons
                    me.bold.click(function(){ me.exec("bold"); });
                    me.italic.click(function(){ me.exec("italic"); });
                    me.underline.click(function(){ me.exec("underline"); });
                    me.strike.click(function(){ me.exec("strikethrough"); });
                    me.link.click(function(){
                        if (me.getRange().htmlText) me.exec("createLink", true);
                        else                        me.exec("createLink", false, prompt("Link URL:", "http://"));
                    });
                    me.unlink.click(function(){ me.exec("unlink", false, []); });
                    me.ol.click(function(){ me.exec("insertunorderedlist"); });
                    me.ul.click(function(){ me.exec("insertorderedlist"); });
                    me.left.click(function(){ me.exec("justifyLeft"); });
                    me.center.click(function(){ me.exec("justifyCenter"); });
                    me.right.click(function(){ me.exec("justifyRight"); });
                },
    exec:       function (a, b, c) {
                    this.iframe[0].contentWindow.focus();
                    this.editor.execCommand(a, b || false, c || null);
                },
    getRange:   function () {
                    var s = this.getSelection();
                    if (!s) { return null; }
                    return (s.getRangeAt) ? s.getRangeAt(0) : s.createRange();
                },
    getVal:     function () {
                    // Strips out MS Word HTML Nonsense
                    return me.value = $.trim(this.editor.body.innerHTML
                            .replace(/MsoNormal/gi, "")
                            .replace(/<\/?link[^>]*>/gi, "")
                            .replace(/<\/?meta[^>]*>/gi, "")
                            .replace(/<\/?xml[^>]*>/gi,"")
                            .replace(/<\?xml[^>]*\/>/gi, "")
                            .replace(/<!--(.*)-->/gi, "")
                            .replace(/<!--(.*)>/gi, "")
                            .replace(/<!(.*)-->/gi, "")
                            .replace(/<w:[^>]*>(.*)<\/w:[^>]*>/gi, "")
                            .replace(/<w:[^>]*\/>/gi, "")
                            .replace(/<\/?w:[^>]*>/gi, "")
                            .replace(/<m:[^>]*\/>/gi, "")
                            .replace(/<m:[^>]>(.*)<\/m:[^>]*>/gi, "")
                            .replace(/<o:[^>]*>([.|\s]*)<\/o:[^>]*>/gi, "")
                            .replace(/<o:[^>]*>/gi, "")
                            .replace(/<o:[^>]*\/>/gi, "")
                            .replace(/<\/o:[^>]*>/gi, "")
                            .replace(/<\/?m:[^>]*>/gi, "")
                            .replace(/style=\"([^>]*)\"/gi, "")
                            .replace(/style=\'([^>]*)\'/gi, "")
                            .replace(/class=\"(.*)\"/gi, "")
                            .replace(/class=\'(.*)\'/gi,"")
                            .replace(/<p[^>]*>/gi, "<p>")
                            .replace(/<\/p[^>]*>/gi, "</p>")
                            .replace(/<span[^>]*>/gi, "")
                            .replace(/<\/span[^>]*>/gi, "")
                            .replace(/<st1:[^>]*>/gi, "")
                            .replace(/<\/st1:[^>]*>/gi, "")
                            .replace(/<font[^>]*>/gi, "")
                            .replace(/<\/font[^>]*>/gi, "")
                            .replace(/[\r\n]/g, " ")
                            .replace(/<wordPasteong><\/wordPasteong>/gi, "")
                            .replace(/<p><\/p>/gi, "").replace(/\/\*(.*)\*\//gi, "")
                            .replace(/<!--/gi, "")
                            .replace(/-->/gi, "")
                            .replace(/<style[^>]*>[^<]*<\/style[^>]*>/gi, "")
                            .replace(/<hr>/gi, ""));
                },
    setVal:     function(sv){
                    var me = this;
                    me.value = sv;
                    $(me.editor.body).html(sv);
                }
});